openapi: 3.0.0
info:
  title: Store App API
  description: Unified API documentation for Store App microservices
  version: 1.0.0

servers:
  - url: http://localhost:80
    description: API Gateway

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        createdAt:
          type: string
          format: date-time

    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        stock:
          type: integer

    Basket:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userEmail:
          type: string
          format: email
        items:
          type: array
          items:
            $ref: '#/components/schemas/BasketItem'

    BasketItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        quantity:
          type: integer

    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userEmail:
          type: string
          format: email
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        totalAmount:
          type: number
          format: float
        status:
          type: string
          enum: [pending, confirmed, shipped, delivered]
        createdAt:
          type: string
          format: date-time

    OrderItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        quantity:
          type: integer
        price:
          type: number
          format: float

paths:
  /auth/user/v1/register:
    post:
      tags:
        - Auth
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /auth/user/v1/login:
    post:
      tags:
        - Auth
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /catalog/api/v1/products:
    get:
      tags:
        - Catalog
      summary: Get all products
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    
    post:
      tags:
        - Catalog
      summary: Create a new product
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                stock:
                  type: integer
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /basket/api/v1/baskets:
    get:
      tags:
        - Basket
      summary: Get user's basket
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User's basket
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'

    post:
      tags:
        - Basket
      summary: Create a new basket
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Basket created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basket'

  /basket/api/v1/baskets/items:
    post:
      tags:
        - Basket
      summary: Add item to basket
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                  format: uuid
                quantity:
                  type: integer
      responses:
        '200':
          description: Item added to basket

  /orders/api/v1/orders:
    get:
      tags:
        - Orders
      summary: Get user's orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    
    post:
      tags:
        - Orders
      summary: Create a new order
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'