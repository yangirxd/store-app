definitions:
  domain.Product:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    type: object
  dto.CreateProductRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        minimum: 0
        type: integer
    required:
    - name
    - price
    - stock
    type: object
  dto.UpdateProductRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        minimum: 0
        type: integer
    type: object
info:
  contact: {}
paths:
  /api/v1/products:
    get:
      description: Get a list of all products (public endpoint)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Product'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product in the catalog (requires authentication)
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Product data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new product
      tags:
      - products
  /api/v1/products/{id}:
    delete:
      description: Delete a product by its UUID (requires authentication)
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Product not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a product
      tags:
      - products
    get:
      description: Get details of a product by its UUID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Product not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update details of an existing product (requires authentication)
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated product data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Product not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update a product
      tags:
      - products
swagger: "2.0"
